{"version":3,"sources":["app/common/Input.module.css","app/common/Page.module.css","app/session-screen/SessionScreen.module.css","app/common/Button.module.css","app/jedi.svg","app/session-screen/ReportScreen.module.css","serviceWorker.js","app/MathJediLogo.js","app/common/Button.js","app/common/utils.js","app/App.actions.js","app/common/Vertical.js","app/opening-screen/OpeningScreen.js","app/common/Input.js","app/common/Page.js","app/common/Grow.js","app/common/Horizontal.js","app/common/Notification.js","app/registration-screen/RegistrationScreen.js","app/session-screen/ReportScreen.js","app/session-screen/ProgressPie.js","app/session-screen/ExerciseScreen.js","app/session-screen/SessionScreen.js","app/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","MathJedi","style","fontFamily","fontSize","Button","children","onClick","props","className","classes","button","ButtonLink","to","v","toString","uuidv4","replace","c","r","Math","random","DEFAULT_STATE","student","name","email","config","questionsRange","start","end","totalSums","totalQuestionsEachSum","percentageOfQuestionInNegative","currentSessionId","sessions","Context","createContext","AppContextProvider","useState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Provider","value","buildQuestions","findNextNumber","total","prevNumber","shouldBeNegative","candidate","round","abs","Array","keys","map","numbers","i","nextNumber","push","generateSet","HORIZONTAL_ALIGN","left","center","right","VERTICAL_ALIGN","top","bottom","Vertical","heightFull","horizontalAlign","verticalAlign","gap","visible","inlineStyle","display","flexDirection","height","alignItems","justifyContent","child","index","childStyle","React","cloneElement","key","marginTop","OpeningScreen","isRegistered","useContext","useStudentIsRegistered","startNewSession","history","useHistory","sessionId","filteredSessions","filter","s","id","session","startAt","Date","toISOString","endAt","questions","answers","newState","useStartNewSession","currentActiveSession","length","useCurrentActiveSession","lastSessionId","useLastSessionId","handleClick","useCallback","confirm","activeSessionId","handleContinue","src","jediLogo","alt","width","Input","label","onChange","autoCaps","localValue","setLocalValue","handleChange","event","target","toUpperCase","oldVal","root","input","InputNumber","parseInt","type","textAlign","Page","contentProps","content","Actions","actions","hasActions","ACTIONS_ALIGN","align","Grow","grow","flexGrow","Horizontal","marginLeft","NOTIFICATION_BACKGROUND_COLOR","info","warning","error","Notification","notification","message","closeNotification","padding","color","backgroundColor","borderRadius","boxShadow","icon","faTimesCircle","size","cursor","DEFAULT_NOTIFICATIONS","NotificationContext","NotificationContextProvider","notifications","setNotifications","position","RegistrationScreen","page","setPage","showNotification","oldNotifications","useNotification","updateConfiguration","useUpdateConfiguration","oldSate","propsArray","split","propsLength","pointer","forEach","prop","nameLength","emailLength","questionStart","questionEnd","validatePage","nextPage","next","saveChanges","placeholder","months","ReportScreen","time","minutes","toFixed","seconds","convertToTime","reduce","acc","timeTakenInMs","date","append","n","getDate","getMonth","getFullYear","getHours","getMinutes","formatDdMmmYyyyHhMmSs","table","whiteSpace","question","answer","expected","isCorrect","data-iscorrect","join","ProgressPie","strokeWidth","startAngle","data","ExerciseScreen","questionIndex","nextQuestionsToBeAnswered","setAnswer","useMemo","startQuestion","undefined","oldState","expectedAnswer","endQuestion","answerObject","getTime","takenAt","answerAt","newSessions","isDone","sessionIndex","indexOf","slice","useAnswer","contentRef","useRef","setFontSize","questionStyle","answerRef","nextQuestionsToBeAnsweredLength","current","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","unobserve","onEnterPressed","e","keyCode","answerValue","setAnswerValue","ref","overflow","number","autoFocus","min","onKeyDown","borderLeft","SessionScreen","useSession","useParams","App","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.994f9e4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Input_root__1Xz6i\",\"input\":\"Input_input__3r00d\",\"label\":\"Input_label__1ixB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Page_root__1ujzf\",\"content\":\"Page_content__jH-K8\",\"actions\":\"Page_actions__Czf2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionBox\":\"SessionScreen_questionBox__3KAJQ\",\"content\":\"SessionScreen_content__3Rfcu\",\"question\":\"SessionScreen_question__3Pjg_\",\"number\":\"SessionScreen_number__2Lnhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__d_Cwr\"};","module.exports = __webpack_public_path__ + \"static/media/jedi.3a436b82.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ReportScreen_table__1UPzl\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'},\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './fonts/startjedi.css';\r\n\r\nexport default function MathJedi() {\r\n    return <div style={{fontFamily: 'Star Jedi', fontSize: 52}}>Math Jedi</div>\r\n}\r\n","import React from \"react\";\r\nimport classes from './Button.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Button({children, onClick, ...props}) {\r\n    return <button className={classes.button} onClick={onClick} {...props} >{children}</button>\r\n}\r\n\r\nexport function ButtonLink({children, to,v, ...props}) {\r\n\r\n    return <Link to={to} className={classes.button} v={v?.toString()} {...props} >{children}</Link>\r\n}\r\n","export function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        // eslint-disable-next-line no-mixed-operators\r\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\nimport {uuidv4} from \"./common/utils\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst DEFAULT_STATE = {\r\n    student: {\r\n        name: '',\r\n        email: '',\r\n        config: {\r\n            questionsRange: {\r\n                start: 10,\r\n                end: 99\r\n            },\r\n            totalSums: 200,\r\n            totalQuestionsEachSum: 6,\r\n            percentageOfQuestionInNegative: 30,\r\n        },\r\n        currentSessionId: null\r\n    },\r\n    sessions: []\r\n};\r\n\r\nconst Context = createContext();\r\n\r\nexport default function AppContextProvider({children}) {\r\n    const [state, setState] = useState(() => {\r\n        if (localStorage.getItem('math-jedi')) {\r\n            return JSON.parse(localStorage.getItem('math-jedi'));\r\n        }\r\n        return DEFAULT_STATE;\r\n    });\r\n    useEffect(() => {\r\n        if (state) {\r\n            localStorage.setItem('math-jedi', JSON.stringify(state));\r\n        }\r\n    }, [state]);\r\n\r\n    return <Context.Provider value={{state, setState}}>\r\n        {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport function useStudentIsRegistered() {\r\n    const {state} = useContext(Context);\r\n    return state?.student?.name !== ''\r\n}\r\n\r\nexport function useStudent() {\r\n    const {state} = useContext(Context);\r\n    return state.student;\r\n}\r\n\r\nexport function useUpdateConfiguration() {\r\n    const {setState} = useContext(Context);\r\n    return (config) => setState((oldVal) => {\r\n        return {...oldVal, student: config}\r\n    });\r\n}\r\n\r\n\r\nfunction buildQuestions({questionsRange: {start, end}, totalSums, totalQuestionsEachSum, percentageOfQuestionInNegative}) {\r\n\r\n    const findNextNumber = ({start, end, percentageOfQuestionInNegative, total, prevNumber}) => {\r\n\r\n        const shouldBeNegative = (Math.random() <= (percentageOfQuestionInNegative / 100));\r\n        const candidate = Math.round((Math.random() * (end - start)) + start);\r\n        const value = candidate * (shouldBeNegative ? -1 : 1);\r\n        if ((value + total) < 0) {\r\n            return findNextNumber({start, end, percentageOfQuestionInNegative, total, prevNumber});\r\n        }\r\n        if (value % 10 === 0) {\r\n            return findNextNumber({start, end, percentageOfQuestionInNegative, total, prevNumber});\r\n        }\r\n        if (value % 11 === 0) {\r\n            return findNextNumber({start, end, percentageOfQuestionInNegative, total, prevNumber});\r\n        }\r\n        if (Math.abs(prevNumber) === candidate) {\r\n            return findNextNumber({start, end, percentageOfQuestionInNegative, total, prevNumber});\r\n        }\r\n        return value;\r\n    };\r\n\r\n    const generateSet = ({start, end, percentageOfQuestionInNegative, totalQuestionsEachSum}) => {\r\n        const numbers = [];\r\n        let total = 0;\r\n        let prevNumber = 0;\r\n        for (let i = 0; i < totalQuestionsEachSum; i++) {\r\n            const nextNumber = findNextNumber({start, end, percentageOfQuestionInNegative, total, prevNumber});\r\n            prevNumber = nextNumber;\r\n            total = total + nextNumber;\r\n            numbers.push(nextNumber);\r\n        }\r\n        return numbers;\r\n    };\r\n\r\n    return [...Array(totalSums).keys()].map(() => generateSet({\r\n        totalQuestionsEachSum,\r\n        percentageOfQuestionInNegative,\r\n        end,\r\n        start\r\n    }));\r\n}\r\n\r\nexport function useStartNewSession() {\r\n    const {setState} = useContext(Context);\r\n    const history = useHistory();\r\n\r\n    return () => {\r\n        const sessionId = uuidv4();\r\n        setState(state => {\r\n            const filteredSessions = state.sessions.filter(s => s.id !== state.student.currentSessionId);\r\n            const session = {\r\n                id: sessionId,\r\n                startAt: new Date().toISOString(),\r\n                endAt: null,\r\n                questions: buildQuestions(state.student.config),\r\n                answers: []\r\n            };\r\n            const newState = {student: {...state.student}, sessions: [...filteredSessions, session]};\r\n            newState.student.currentSessionId = session.id;\r\n            return newState;\r\n        });\r\n        history.push(`/session/${sessionId}`);\r\n    }\r\n}\r\n\r\nexport function useCurrentActiveSession() {\r\n    const {state} = useContext(Context);\r\n    const sessions = state?.sessions?.filter(session => session.id === state.student.currentSessionId);\r\n    return sessions?.length > 0 ? sessions[0] : null;\r\n}\r\n\r\nexport function useLastSessionId() {\r\n    const {state} = useContext(Context);\r\n    return state.sessions && state.sessions.length > 0 ? state.sessions[state.sessions.length - 1].id : null;\r\n}\r\n\r\nexport function useSession(sessionId) {\r\n    const {state} = useContext(Context);\r\n    const sessions = state?.sessions?.filter(session => session.id === sessionId);\r\n    return sessions?.length > 0 ? sessions[0] : null;\r\n}\r\n\r\nexport function useAnswer(sessionId, questionIndex) {\r\n    const {setState} = useContext(Context);\r\n    return useMemo(() => {\r\n        const startQuestion = new Date();\r\n        return (answer) => {\r\n            if (answer === undefined || answer === '' || answer === null) {\r\n                return;\r\n            }\r\n            setState((oldState) => {\r\n                const session = oldState.sessions.filter(s => s.id === sessionId)[0];\r\n                if (session && session.questions && session.questions.length > questionIndex) {\r\n                    const question = session.questions[questionIndex];\r\n                    answer = parseInt(answer);\r\n                    const expectedAnswer = question.reduce((acc, next) => acc + next, 0);\r\n                    const endQuestion = new Date();\r\n                    const answerObject = {\r\n                        answer: answer,\r\n                        expected: expectedAnswer,\r\n                        isCorrect: answer === expectedAnswer,\r\n                        timeTakenInMs: endQuestion.getTime() - startQuestion.getTime(),\r\n                        takenAt: startQuestion.toISOString(),\r\n                        answerAt: endQuestion.toISOString()\r\n                    };\r\n                    const newSessions = {...session, answers: [...session.answers, answerObject]};\r\n                    const isDone = newSessions.questions.length === newSessions.answers.length;\r\n                    newSessions.endAt = isDone ? endQuestion.toISOString() : null;\r\n                    const sessionIndex = oldState.sessions.indexOf(session);\r\n                    return {\r\n                        student: {\r\n                            ...oldState.student,\r\n                            currentSessionId: isDone ? null : oldState.student.currentSessionId\r\n                        },\r\n                        sessions: [...oldState.sessions.slice(0, sessionIndex), newSessions, ...oldState.sessions.slice(sessionIndex + 1, oldState.sessions.length)]\r\n                    };\r\n                }\r\n                return oldState;\r\n            });\r\n        };\r\n    }, [questionIndex, sessionId, setState]);\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nconst HORIZONTAL_ALIGN = {\r\n    left: 'flex-start',\r\n    center: 'center',\r\n    right: 'flex-end'\r\n};\r\nconst VERTICAL_ALIGN = {\r\n    top: 'flex-start',\r\n    center: 'center',\r\n    bottom: 'flex-end'\r\n};\r\nexport default function Vertical({children, heightFull, horizontalAlign, verticalAlign, gap, style,visible=true, ...props}) {\r\n\r\n    const inlineStyle = {display: visible === false ? 'none' : 'flex' , flexDirection: 'column', height: heightFull ? '100%' : 'none'};\r\n    if (horizontalAlign in HORIZONTAL_ALIGN) {\r\n        inlineStyle.alignItems = HORIZONTAL_ALIGN[horizontalAlign];\r\n    }\r\n    if (verticalAlign in VERTICAL_ALIGN) {\r\n        inlineStyle.justifyContent = VERTICAL_ALIGN[verticalAlign];\r\n    }\r\n    if (gap > 0) {\r\n        children = children.map((child, index) => {\r\n            if (index > 0) {\r\n                const childStyle = child?.props?.style ?? {};\r\n                return React.cloneElement(child, {key: index, style: {marginTop: gap, ...childStyle}})\r\n            }\r\n            return child;\r\n        })\r\n    }\r\n    return <div style={{...inlineStyle, ...style}} {...props}>{children}</div>\r\n}\r\n","import jediLogo from \"../jedi.svg\";\r\nimport MathJediLogo from \"../MathJediLogo\";\r\nimport React, {useCallback} from \"react\";\r\nimport Button, {ButtonLink} from \"../common/Button\";\r\nimport {useCurrentActiveSession, useLastSessionId, useStartNewSession, useStudentIsRegistered} from \"../App.actions\";\r\nimport Vertical from \"../common/Vertical\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function OpeningScreen() {\r\n    const isRegistered = useStudentIsRegistered();\r\n    const startNewSession = useStartNewSession();\r\n    const currentActiveSession = useCurrentActiveSession();\r\n    const lastSessionId = useLastSessionId();\r\n    const history = useHistory();\r\n    const handleClick = useCallback(() => {\r\n        if (currentActiveSession !== null) {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            if (confirm('This will delete current active session and start a new one ')) {\r\n                startNewSession();\r\n            }\r\n        } else {\r\n            startNewSession();\r\n        }\r\n    }, [currentActiveSession, startNewSession]);\r\n    const activeSessionId = currentActiveSession?.id;\r\n    const handleContinue = useCallback(() => {\r\n        history.push(`/session/${activeSessionId}`);\r\n    }, [activeSessionId, history]);\r\n    return <Vertical horizontalAlign={'center'} verticalAlign={'center'} heightFull>\r\n        <Vertical horizontalAlign={'center'} gap={10}>\r\n            <img src={jediLogo} alt=\"\" width={200} height={200}/>\r\n            <MathJediLogo/>\r\n            <div style={{fontSize: 25, marginTop: 0}}>May the force be with you</div>\r\n\r\n            <Vertical gap={5}>\r\n                <Vertical visible={!isRegistered}>\r\n                    <ButtonLink to={`/register`}>Register</ButtonLink>\r\n                </Vertical>\r\n                <Vertical visible={isRegistered}>\r\n                    <ButtonLink to={`/register`}>Settings</ButtonLink>\r\n                </Vertical>\r\n                <Vertical visible={currentActiveSession !== null}>\r\n                    <Button onClick={handleContinue}>Continue</Button>\r\n                </Vertical>\r\n                <Vertical visible={lastSessionId !== null}>\r\n                    <Button onClick={() => history.push(`/session/${lastSessionId}`)}>Last Score</Button>\r\n                </Vertical>\r\n                <Vertical visible={isRegistered}>\r\n                    <Button onClick={handleClick}>New</Button>\r\n                </Vertical>\r\n            </Vertical>\r\n        </Vertical>\r\n\r\n    </Vertical>\r\n}\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport classes from './Input.module.css';\r\n\r\nexport default function Input({style, label, value, onChange, autoCaps = false, ...props}) {\r\n    const [localValue, setLocalValue] = useState(value);\r\n    useEffect(() => {\r\n        setLocalValue(value);\r\n    }, [value]);\r\n\r\n    const handleChange = useCallback((event) => {\r\n        let value = event.target.value;\r\n        value = autoCaps ? value.toUpperCase() : value;\r\n        if (onChange) {\r\n            onChange({value, oldVal: localValue});\r\n        } else {\r\n            setLocalValue(value);\r\n        }\r\n    }, [autoCaps, localValue, onChange]);\r\n    return <label className={classes.root} style={style}>\r\n        <div className={classes.label}>{label}</div>\r\n        <input className={classes.input} {...props} value={localValue} onChange={handleChange}/>\r\n    </label>\r\n\r\n}\r\n\r\nexport function InputNumber({style, label, value, onChange, ...props}) {\r\n    const [localValue, setLocalValue] = useState(value);\r\n    useEffect(() => {\r\n        setLocalValue(value);\r\n    }, [value]);\r\n    const handleChange = useCallback((event) => {\r\n        let value = parseInt(event.target.value);\r\n        if (onChange) {\r\n            onChange({value, oldVal: localValue});\r\n        } else {\r\n            setLocalValue(value);\r\n        }\r\n    }, [localValue, onChange]);\r\n    return <label className={classes.root} style={style}>\r\n        <div className={classes.label}>{label}</div>\r\n        <input className={classes.input} type={'number'} style={{textAlign: 'right'}} {...props} value={localValue}\r\n               onChange={handleChange}/>\r\n    </label>\r\n}\r\n","import React from \"react\";\r\nimport classes from './Page.module.css';\r\n\r\nfunction Page({children, contentProps}) {\r\n    const content = children.filter(c => !(c.type === Actions));\r\n    const actions = children.filter(c => c.type === Actions);\r\n    const hasActions = actions.length > 0;\r\n    return <div className={classes.root}>\r\n        <div className={classes.content} {...contentProps}>{content}</div>\r\n        {hasActions && actions}\r\n    </div>\r\n}\r\n\r\nconst ACTIONS_ALIGN = {\r\n    left: 'flex-start',\r\n    right: 'flex-end',\r\n    center: 'center'\r\n};\r\n\r\nfunction Actions({children, align = 'left'}) {\r\n    return <div className={classes.actions} style={{justifyContent: ACTIONS_ALIGN[align]}}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nPage.Actions = Actions;\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\n\r\nexport default function Grow({grow = 1}) {\r\n    return <div style={{flexGrow: grow}}></div>\r\n}\r\n","import React from \"react\";\r\n\r\nconst HORIZONTAL_ALIGN = {\r\n    left: 'flex-start',\r\n    center: 'center',\r\n    right: 'flex-end'\r\n};\r\nconst VERTICAL_ALIGN = {\r\n    top: 'flex-start',\r\n    center: 'center',\r\n    bottom: 'flex-end'\r\n};\r\nexport default function Horizontal({children, heightFull, horizontalAlign, verticalAlign, gap, style,visible=true, ...props}) {\r\n    const inlineStyle = {display: visible===false ? 'none': 'flex', height: heightFull ? '100%' : 'none'};\r\n    if (horizontalAlign in HORIZONTAL_ALIGN) {\r\n        inlineStyle.justifyContent = HORIZONTAL_ALIGN[horizontalAlign];\r\n    }\r\n    if (verticalAlign in VERTICAL_ALIGN) {\r\n        inlineStyle.alignItems = VERTICAL_ALIGN[verticalAlign];\r\n    }\r\n    if (gap > 0) {\r\n        children = children.map((child, index) => {\r\n            if (index > 0) {\r\n                const childStyle = child?.props?.style ?? {};\r\n                return React.cloneElement(child, {key: index, style: {marginLeft: gap, ...childStyle}})\r\n            }\r\n            return React.cloneElement(child, {key: index});\r\n        })\r\n    }\r\n    return <div style={{...inlineStyle, ...style}} {...props}>{children}</div>\r\n}\r\n","import React, {createContext, useCallback, useContext, useState} from \"react\";\r\nimport Horizontal from \"./Horizontal\";\r\nimport {uuidv4} from \"./utils\";\r\nimport Vertical from \"./Vertical\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NOTIFICATION_BACKGROUND_COLOR = {\r\n    info: 'green',\r\n    warning: 'yellow',\r\n    error: 'red'\r\n};\r\n\r\nfunction Notification({style, notification: {message, closeNotification, id, type}}) {\r\n    const inlineStyle = {\r\n        padding: '5px 10px 10px 10px',\r\n        color: 'white',\r\n        backgroundColor: NOTIFICATION_BACKGROUND_COLOR[type],\r\n        borderRadius: 5,\r\n        fontSize: '1.8rem',\r\n        boxShadow: '0px 5px 3px -3px rgba(0,0,0,0.3)'\r\n    };\r\n    return <Horizontal style={{...style, ...inlineStyle}} gap={10} verticalAlign={'center'}>\r\n        <div>\r\n            {message}\r\n        </div>\r\n        <FontAwesomeIcon icon={faTimesCircle} size=\"1x\" style={{cursor: 'pointer'}} onClick={closeNotification}/>\r\n    </Horizontal>\r\n}\r\n\r\nconst DEFAULT_NOTIFICATIONS = [];\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport function NotificationContextProvider({children}) {\r\n    const [notifications, setNotifications] = useState(DEFAULT_NOTIFICATIONS);\r\n    return <NotificationContext.Provider value={{notifications, setNotifications}}>\r\n        {children}\r\n        <Vertical style={{position: 'fixed', top: 10, width: '100%'}} gap={5} horizontalAlign={'center'}>\r\n            {notifications.map(notification => <Notification key={notification.id} notification={notification}/>)}\r\n        </Vertical>\r\n    </NotificationContext.Provider>\r\n}\r\n\r\nexport function useNotification() {\r\n    const {setNotifications} = useContext(NotificationContext);\r\n    const showNotification = useCallback(({message, type}) => {\r\n        const id = uuidv4();\r\n        const closeNotification = () => {\r\n            setNotifications((notifications) => notifications.filter(notification => notification.id !== id));\r\n        };\r\n        setNotifications((oldNotifications) => [...oldNotifications, {id, message, type, closeNotification}]);\r\n        return closeNotification;\r\n    }, [setNotifications]);\r\n    return {\r\n        info: (message) => showNotification({message, type: 'info'}),\r\n        warning: (message) => showNotification({message, type: 'warning'}),\r\n        error: (message) => showNotification({message, type: 'error'})\r\n    };\r\n}\r\n","import React, {useCallback, useState} from \"react\";\r\nimport Input, {InputNumber} from \"../common/Input\";\r\nimport Page from \"../common/Page\";\r\nimport Button from \"../common/Button\";\r\nimport Grow from \"../common/Grow\";\r\nimport Horizontal from \"../common/Horizontal\";\r\nimport {useNotification} from \"../common/Notification\";\r\nimport Vertical from \"../common/Vertical\";\r\nimport {useStudent, useUpdateConfiguration} from \"../App.actions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function RegistrationScreen() {\r\n    const [page, setPage] = useState(1);\r\n    const student = useStudent();\r\n    const [state, setState] = useState(student);\r\n    const notification = useNotification();\r\n    const updateConfiguration = useUpdateConfiguration();\r\n    const history = useHistory();\r\n    const handleChange = useCallback((props) => ({value}) => {\r\n        setState((oldSate) => {\r\n            const newState = {...oldSate};\r\n            const propsArray = props.split('.');\r\n            let propsLength = propsArray.length;\r\n            let pointer = newState;\r\n            propsArray.forEach((prop, index) => {\r\n                if (index < (propsLength - 1)) {\r\n                    pointer = pointer[prop];\r\n                }\r\n            });\r\n            pointer[propsArray[propsArray.length - 1]] = value;\r\n            return newState;\r\n        });\r\n    }, []);\r\n    const nameLength = state?.name?.length;\r\n    const emailLength = state?.email?.length;\r\n    const questionStart = state?.config?.questionsRange?.start;\r\n    const questionEnd = state?.config.questionsRange?.end;\r\n    const totalSums = state?.config?.totalSums;\r\n    const totalQuestionsEachSum = state?.config?.totalQuestionsEachSum;\r\n    const percentageOfQuestionInNegative = state?.config?.percentageOfQuestionInNegative;\r\n    const validatePage = useCallback(() => {\r\n        switch (page) {\r\n            case 1 : {\r\n                if (nameLength > 0) {\r\n                    return true;\r\n                }\r\n                notification.error('Name should not be empty');\r\n                return false;\r\n            }\r\n            case 2 : {\r\n                if (emailLength > 0) {\r\n                    return true;\r\n                }\r\n                notification.error('Email should not be empty');\r\n                return false;\r\n            }\r\n            case 3 : {\r\n                if (!(questionStart > 0)) {\r\n                    notification.error('Range `Start value` should be greater than 0');\r\n                    return false;\r\n                }\r\n                if (!(questionEnd > 0)) {\r\n                    notification.error('Range `End value` should be greater than 0');\r\n                    return false;\r\n                }\r\n                if (questionEnd < questionStart) {\r\n                    notification.error('Range `End value` should be greater than `Start value`');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            case 4 : {\r\n                if (!(totalSums > 0)) {\r\n                    notification.error('`Total Sums` should be greater than 0');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            case 5 : {\r\n                if (!(totalQuestionsEachSum > 0)) {\r\n                    notification.error('`Total Questions each Sums` should be greater than 0');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            case 6 : {\r\n                if (!(percentageOfQuestionInNegative >= 0 && percentageOfQuestionInNegative <= 100)) {\r\n                    notification.error('`Percentae of Negative Questions` should be between than 0 to 100');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            default : {\r\n                return true;\r\n            }\r\n        }\r\n\r\n    }, [emailLength, nameLength, notification, page, percentageOfQuestionInNegative, questionEnd, questionStart, totalQuestionsEachSum, totalSums]);\r\n\r\n    const nextPage = useCallback((next) => {\r\n        if (validatePage()) {\r\n            setPage(page + (next ? 1 : -1));\r\n        }\r\n    }, [page, validatePage]);\r\n\r\n    const saveChanges = useCallback(() => {\r\n        updateConfiguration(state);\r\n        history.push(\"/\");\r\n    }, [history, state, updateConfiguration]);\r\n    return <Page>\r\n        <Vertical heightFull={true} verticalAlign={'center'} style={{padding: '1rem'}}>\r\n            {page === 1 &&\r\n            <Input placeholder={'Name'} autoCaps={false} label={'Enter your Name'} value={state.name}\r\n                   onChange={handleChange('name')}/>\r\n            }\r\n            {page === 2 &&\r\n            <Input type={\"email\"} autoCaps={false} placeholder={'Email'} label={'Enter your E-Mail'} value={state.email}\r\n                   onChange={handleChange('email')}/>\r\n            }\r\n            {page === 3 &&\r\n            <Horizontal gap={10} horizontalAlign={'center'}>\r\n                <InputNumber label={'Start Range'} value={state?.config?.questionsRange?.start}\r\n                             onChange={handleChange('config.questionsRange.start')}/>\r\n                <InputNumber label={'End Range'} value={state?.config?.questionsRange?.end}\r\n                             onChange={handleChange('config.questionsRange.end')}/>\r\n            </Horizontal>\r\n            }\r\n            {page === 4 &&\r\n            <InputNumber label={'Total Sums'} value={state?.config?.totalSums}\r\n                         onChange={handleChange('config.totalSums')}/>\r\n            }\r\n            {page === 5 &&\r\n            <InputNumber label={'Total Questions Each Sum'} value={state?.config?.totalQuestionsEachSum}\r\n                         onChange={handleChange('config.totalQuestionsEachSum')}/>\r\n            }\r\n\r\n            {page === 6 &&\r\n            <InputNumber label={'Percentage of Negative Questions'}\r\n                         value={state?.config?.percentageOfQuestionInNegative}\r\n                         onChange={handleChange('config.percentageOfQuestionInNegative')}/>\r\n            }\r\n        </Vertical>\r\n        <Page.Actions align={'center'}>\r\n            {page !== 1 &&\r\n            <Button onClick={() => nextPage(false)}>Back</Button>\r\n            }\r\n            <Grow/>\r\n            {page < 6 &&\r\n            <Button onClick={() => nextPage(true)}>Next</Button>\r\n            }\r\n            {page === 6 &&\r\n            <Button onClick={() => saveChanges()}>Save</Button>\r\n            }\r\n        </Page.Actions>\r\n    </Page>\r\n\r\n}\r\n","import React from \"react\";\r\nimport Page from \"../common/Page\";\r\nimport Button from \"../common/Button\";\r\nimport Grow from \"../common/Grow\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport classes from './ReportScreen.module.css';\r\nimport Horizontal from \"../common/Horizontal\";\r\n\r\n\r\nconst months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n\r\n\r\nfunction formatDdMmmYyyyHhMmSs(date) {\r\n    const append = (n) => n <= 9 ? `0${n}` : n.toString();\r\n    return `${append(date.getDate())}-${months[date.getMonth()]}-${date.getFullYear()} ${append(date.getHours())}:${append(date.getMinutes())}`\r\n}\r\n\r\nconst ONE_MINUTE = (1000 * 60);\r\n\r\nfunction convertToTime(time) {\r\n    const minutes = (time / ONE_MINUTE).toFixed(0);\r\n    const seconds = ((time % ONE_MINUTE) / 1000).toFixed(1);\r\n    return `${minutes} Minutes ${seconds} Seconds`\r\n}\r\n\r\nexport default function ReportScreen({session}) {\r\n    const history = useHistory();\r\n\r\n    const timeTaken = session.answers.reduce((acc, next) => acc + next.timeTakenInMs, 0);\r\n\r\n    const time = convertToTime(timeTaken);\r\n\r\n    return <Page>\r\n        <Horizontal verticalAlign={'bottom'}>\r\n            <div style={{fontSize: '2rem'}}>{time}</div>\r\n            <Grow/>\r\n            <div style={{\r\n                fontSize: '1.5rem'\r\n            }}>{formatDdMmmYyyyHhMmSs(new Date(session.startAt))}</div>\r\n        </Horizontal>\r\n        <div>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                <tr>\r\n                    <td style={{textAlign: 'center'}}>No</td>\r\n                    <td style={{width: '100%', textAlign: 'right', padding: 5}}>Question</td>\r\n                    <td>Total</td>\r\n                    <td>Answer</td>\r\n                    <td style={{whiteSpace: 'nowrap'}}>Time (Seconds)</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {session.questions.map((question, index) => {\r\n                    const {timeTakenInMs, answer, expected, isCorrect} = session.answers[index];\r\n                    return <tr key={index} data-iscorrect={isCorrect}>\r\n                        <td style={{textAlign: 'center'}}>{index + 1}</td>\r\n                        <td style={{textAlign: 'right'}}>{question.join(', ')}</td>\r\n                        <td style={{textAlign: 'center'}}>{expected}</td>\r\n                        <td style={{textAlign: 'center'}}>{answer}</td>\r\n                        <td style={{\r\n                            textAlign: 'center',\r\n                            whiteSpace: 'nowrap'\r\n                        }}>{`${((timeTakenInMs) / 1000).toFixed(2)}`}</td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <Page.Actions>\r\n            <Grow/>\r\n            <Button onClick={() => history.push('/')}>Home</Button>\r\n        </Page.Actions>\r\n    </Page>\r\n}\r\n","import React from \"react\";\r\nimport ReactSvgPieChart from 'react-svg-piechart';\r\nimport Vertical from \"../common/Vertical\";\r\n\r\n\r\nexport default function ProgressPie({style, value}) {\r\n\r\n    return <div style={{\r\n        position: 'absolute',\r\n        width: 100,\r\n        height: 100,\r\n        ...style\r\n    }}>\r\n        <ReactSvgPieChart strokeWidth={0} startAngle={270} data={[\r\n            {value: value, color: '#404040'},\r\n            {value: (100 - value), color: '#A6A6A6'}]}/>\r\n        <div style={{\r\n            position: 'absolute',\r\n            top: 10,\r\n            left: 10,\r\n            width: 80,\r\n            height: 80,\r\n            backgroundColor: 'white',\r\n            borderRadius: 100\r\n        }}>\r\n            <Vertical heightFull={true} style={{fontSize: 22}} verticalAlign={'center'} horizontalAlign={'center'}>\r\n            </Vertical>\r\n        </div>\r\n    </div>\r\n}\r\n","import {useAnswer} from \"../App.actions\";\r\nimport React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport Horizontal from \"../common/Horizontal\";\r\nimport classes from \"./SessionScreen.module.css\";\r\nimport Page from \"../common/Page\";\r\nimport Grow from \"../common/Grow\";\r\nimport Button from \"../common/Button\";\r\nimport ProgressPie from \"./ProgressPie\";\r\n\r\nconst ENTER_KEY = 13;\r\n\r\nexport default function ExerciseScreen({currentActiveSession}) {\r\n\r\n    const questionIndex = currentActiveSession.answers.length;\r\n    const nextQuestionsToBeAnswered = currentActiveSession.questions[questionIndex] || [];\r\n    const setAnswer = useAnswer(currentActiveSession.id, questionIndex);\r\n\r\n    const contentRef = useRef();\r\n    const [fontSize, setFontSize] = useState(24);\r\n    const questionStyle = {fontSize};\r\n    const answerRef = useRef();\r\n    const nextQuestionsToBeAnsweredLength = nextQuestionsToBeAnswered.length;\r\n    useEffect(() => {\r\n        const content = contentRef.current;\r\n        const updateFontSize = (height) => {\r\n            setFontSize((height * 0.8) / (nextQuestionsToBeAnsweredLength + 1));\r\n        };\r\n\r\n        const resizeObserver = new ResizeObserver(entries => {\r\n            for (let entry of entries) {\r\n                updateFontSize(entry.contentRect.height);\r\n            }\r\n        });\r\n        resizeObserver.observe(content);\r\n        return () => {\r\n            resizeObserver.unobserve(content);\r\n        }\r\n    }, [nextQuestionsToBeAnsweredLength]);\r\n\r\n    const onEnterPressed = useCallback((e) => {\r\n        if (e.keyCode === ENTER_KEY) {\r\n            setAnswer(answerRef.current.value);\r\n        }\r\n    }, [answerRef, setAnswer]);\r\n    useEffect(() => {\r\n        answerRef.current.value = '';\r\n    }, [answerRef, questionIndex]);\r\n\r\n    const [answerValue, setAnswerValue] = useState(false);\r\n    const expectedAnswer = nextQuestionsToBeAnswered.reduce((acc, next) => acc + next);\r\n    return <Page><label style={{width: '100%', height: '100%'}}>\r\n        <Horizontal style={{height: '100%'}}>\r\n            <div ref={contentRef} className={classes.content}>\r\n                <div style={{height: '100%', overflow: 'auto'}}>\r\n                    <div className={classes.question} style={questionStyle}>\r\n                        {nextQuestionsToBeAnswered.map(((question, index) => <div key={index}>{question}</div>))}\r\n                    </div>\r\n                </div>\r\n                <input ref={answerRef} type=\"number\" className={classes.number} style={{\r\n                    fontSize: fontSize,\r\n                    backgroundColor: answerValue === expectedAnswer ? '#138584' : 'unset',\r\n                    color: answerValue === expectedAnswer ? 'white' : 'unset',\r\n                }}\r\n                       autoFocus={true} min={0} placeholder={'0'} onKeyDown={onEnterPressed}\r\n                       onChange={(e) => setAnswerValue(parseInt(e.target.value))}\r\n                       value={answerValue}\r\n                />\r\n            </div>\r\n            <div style={{width: '30vw', borderLeft: '1px dashed rgba(0,0,0,0.5)'}}/>\r\n            <ProgressPie style={{top: 10, left: 10}}\r\n                         value={(questionIndex * 100) / currentActiveSession.questions.length}/>\r\n        </Horizontal>\r\n    </label>\r\n        <Page.Actions>\r\n            <Grow/>\r\n            <Button onClick={() => setAnswer(answerRef.current.value)}>Next</Button>\r\n        </Page.Actions>\r\n    </Page>;\r\n}\r\n","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useSession} from \"../App.actions\";\r\nimport ReportScreen from \"./ReportScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\n\r\n\r\nexport default function SessionScreen() {\r\n    const {sessionId} = useParams();\r\n    const currentActiveSession = useSession(sessionId);\r\n    const isDone = currentActiveSession.answers.length === currentActiveSession.questions.length;\r\n    return <>\r\n        {!isDone && <ExerciseScreen currentActiveSession={currentActiveSession}/>}\r\n        {isDone && <ReportScreen session={currentActiveSession}/>}\r\n    </>\r\n}\r\n","import React from \"react\";\r\nimport OpeningScreen from \"./opening-screen/OpeningScreen\";\r\nimport AppContextProvider from \"./App.actions\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport RegistrationScreen from \"./registration-screen/RegistrationScreen\";\r\nimport {NotificationContextProvider} from \"./common/Notification\";\r\nimport SessionScreen from \"./session-screen/SessionScreen\";\r\n\r\nexport default function App() {\r\n    return <Router >\r\n        <AppContextProvider>\r\n            <NotificationContextProvider>\r\n                <Switch>\r\n                    <Route path={\"/register\"}>\r\n                        <RegistrationScreen/>\r\n                    </Route>\r\n                    <Route path={\"/session/:sessionId\"}>\r\n                        <SessionScreen/>\r\n                    </Route>\r\n                    <Route path={\"/\"}>\r\n                        <OpeningScreen/>\r\n                    </Route>\r\n                </Switch>\r\n            </NotificationContextProvider>\r\n        </AppContextProvider>\r\n    </Router>\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./app/App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}