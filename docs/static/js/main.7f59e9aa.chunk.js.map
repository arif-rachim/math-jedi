{
  "version": 3,
  "sources": [
    "app/common/Input.module.css",
    "app/session-screen/SessionScreen.module.css",
    "app/common/Page.module.css",
    "app/common/Button.module.css",
    "app/jedi.svg",
    "app/session-screen/ReportScreen.module.css",
    "serviceWorker.js",
    "app/MathJediLogo.js",
    "app/common/Button.js",
    "app/common/utils.js",
    "app/App.actions.js",
    "app/common/Vertical.js",
    "app/common/Horizontal.js",
    "app/opening-screen/OpeningScreen.js",
    "app/common/Input.js",
    "app/common/Page.js",
    "app/common/Grow.js",
    "app/common/Notification.js",
    "app/registration-screen/RegistrationScreen.js",
    "app/session-screen/ReportScreen.js",
    "app/session-screen/ExerciseScreen.js",
    "app/session-screen/SessionScreen.js",
    "app/App.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "MathJedi",
    "style",
    "fontFamily",
    "fontSize",
    "Button",
    "children",
    "onClick",
    "props",
    "className",
    "classes",
    "button",
    "ButtonLink",
    "to",
    "uuidv4",
    "replace",
    "c",
    "r",
    "Math",
    "random",
    "toString",
    "DEFAULT_STATE",
    "student",
    "name",
    "email",
    "config",
    "questionsRange",
    "start",
    "end",
    "totalSums",
    "totalQuestionsEachSum",
    "percentageOfQuestionInNegative",
    "currentSessionId",
    "sessions",
    "Context",
    "createContext",
    "AppContextProvider",
    "useState",
    "localStorage",
    "getItem",
    "JSON",
    "parse",
    "state",
    "setState",
    "useEffect",
    "setItem",
    "stringify",
    "Provider",
    "value",
    "buildQuestions",
    "findNextNumber",
    "total",
    "prevNumber",
    "shouldBeNegative",
    "candidate",
    "round",
    "abs",
    "Array",
    "keys",
    "map",
    "numbers",
    "i",
    "nextNumber",
    "push",
    "generateSet",
    "HORIZONTAL_ALIGN",
    "left",
    "center",
    "right",
    "VERTICAL_ALIGN",
    "top",
    "bottom",
    "Vertical",
    "heightFull",
    "horizontalAlign",
    "verticalAlign",
    "gap",
    "inlineStyle",
    "display",
    "flexDirection",
    "height",
    "alignItems",
    "justifyContent",
    "child",
    "index",
    "childStyle",
    "React",
    "cloneElement",
    "key",
    "marginTop",
    "Horizontal",
    "marginLeft",
    "OpeningScreen",
    "isRegistered",
    "useContext",
    "useStudentIsRegistered",
    "startNewSession",
    "history",
    "useHistory",
    "sessionId",
    "filteredSessions",
    "filter",
    "s",
    "id",
    "session",
    "startAt",
    "Date",
    "toISOString",
    "endAt",
    "questions",
    "answers",
    "newState",
    "useStartNewSession",
    "currentActiveSession",
    "length",
    "useCurrentActiveSession",
    "lastSessionId",
    "useLastSessionId",
    "handleClick",
    "useCallback",
    "confirm",
    "activeSessionId",
    "handleContinue",
    "src",
    "jediLogo",
    "alt",
    "width",
    "Input",
    "label",
    "onChange",
    "autoCaps",
    "localValue",
    "setLocalValue",
    "handleChange",
    "event",
    "target",
    "toUpperCase",
    "oldVal",
    "root",
    "input",
    "InputNumber",
    "parseInt",
    "type",
    "textAlign",
    "Page",
    "contentProps",
    "content",
    "Actions",
    "actions",
    "hasActions",
    "ACTIONS_ALIGN",
    "align",
    "Grow",
    "grow",
    "flexGrow",
    "NOTIFICATION_BACKGROUND_COLOR",
    "info",
    "warning",
    "error",
    "Notification",
    "notification",
    "message",
    "closeNotification",
    "padding",
    "color",
    "backgroundColor",
    "borderRadius",
    "boxShadow",
    "icon",
    "faTimesCircle",
    "size",
    "cursor",
    "DEFAULT_NOTIFICATIONS",
    "NotificationContext",
    "NotificationContextProvider",
    "notifications",
    "setNotifications",
    "position",
    "RegistrationScreen",
    "page",
    "setPage",
    "showNotification",
    "oldNotifications",
    "useNotification",
    "updateConfiguration",
    "useUpdateConfiguration",
    "oldSate",
    "propsArray",
    "split",
    "propsLength",
    "pointer",
    "forEach",
    "prop",
    "nameLength",
    "emailLength",
    "questionStart",
    "questionEnd",
    "validatePage",
    "nextPage",
    "next",
    "saveChanges",
    "placeholder",
    "months",
    "getBadgeColor",
    "score",
    "ReportScreen",
    "isCorrect",
    "marginBottom",
    "border",
    "paddingTop",
    "margin",
    "toFixed",
    "getComments",
    "date",
    "append",
    "n",
    "getDate",
    "getMonth",
    "getFullYear",
    "getHours",
    "getMinutes",
    "formatDdMmmYyyyHhMmSs",
    "table",
    "whiteSpace",
    "question",
    "timeTakenInMs",
    "answer",
    "expected",
    "data-isCorrect",
    "join",
    "ExerciseScreen",
    "questionIndex",
    "nextQuestionsToBeAnswered",
    "setAnswer",
    "startQuestion",
    "oldState",
    "expectedAnswer",
    "reduce",
    "acc",
    "endQuestion",
    "answerObject",
    "getTime",
    "takenAt",
    "answerAt",
    "newSessions",
    "isDone",
    "sessionIndex",
    "indexOf",
    "slice",
    "useAnswer",
    "contentRef",
    "useRef",
    "setFontSize",
    "questionStyle",
    "answerRef",
    "current",
    "offsetHeight",
    "onEnterPressed",
    "e",
    "keyCode",
    "ref",
    "number",
    "autoFocus",
    "min",
    "onKeyDown",
    "borderLeft",
    "SessionScreen",
    "useSession",
    "useParams",
    "App",
    "path",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister",
    "catch",
    "console"
  ],
  "mappings": "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",
  "file": "static/js/main.7f59e9aa.chunk.js",
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Input_root__1foEE\",\"input\":\"Input_input__3nhed\",\"label\":\"Input_label__qEcwg\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionBox\":\"SessionScreen_questionBox__edXCE\",\"content\":\"SessionScreen_content__34ABf\",\"question\":\"SessionScreen_question__gr-5D\",\"number\":\"SessionScreen_number__2o89z\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Page_root__nR9AH\",\"content\":\"Page_content__3cK0B\",\"actions\":\"Page_actions__1KgjX\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Z6vcF\"};",
    "module.exports = __webpack_public_path__ + \"static/media/jedi.2c3e13cb.svg\";",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ReportScreen_table__1kiRX\"};",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n",
    "import React from \"react\";\r\nimport './fonts/startjedi.css';\r\n\r\nexport default function MathJedi() {\r\n    return <div style={{fontFamily: 'Star Jedi', fontSize: 52}}>Math Jedi</div>\r\n}\r\n",
    "import React from \"react\";\r\nimport classes from './Button.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Button({children, onClick, ...props}) {\r\n    return <button className={classes.button} onClick={onClick} {...props} >{children}</button>\r\n}\r\n\r\nexport function ButtonLink({children, to, ...props}) {\r\n    return <Link to={to} className={classes.button} {...props} >{children}</Link>\r\n}\r\n",
    "export function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        // eslint-disable-next-line no-mixed-operators\r\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n",
    "import React, {createContext, useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {uuidv4} from \"./common/utils\";\r\nimport {useHistory} from 'react-router-dom';\r\nconst DEFAULT_STATE = {\r\n    student: {\r\n        name: '',\r\n        email: '',\r\n        config: {\r\n            questionsRange: {\r\n                start: 10,\r\n                end: 99\r\n            },\r\n            totalSums: 200,\r\n            totalQuestionsEachSum: 6,\r\n            percentageOfQuestionInNegative: 30,\r\n        },\r\n        currentSessionId : null\r\n    },\r\n    sessions: [\r\n        /*{\r\n            startAt: '25-JAN-2020T0303020',\r\n            endAt: '25-JAN-2020T03030303',\r\n            questions: [\r\n                [33, 45, 23, 65, 29, 30],\r\n                [78, 25, 33, 23, 132, 33],\r\n                [89, 22, 32, 13, 22, 32]\r\n            ],\r\n            answers: [\r\n                {\r\n                    answer: 332,\r\n                    expected: 782,\r\n                    isCorrect: false,\r\n                    timeTakenInMs: 300,\r\n                    takenAt: '25-JAN-2020T030303',\r\n                    answerAt: '25-JAN-2020T0302032'\r\n                }\r\n            ]\r\n        }*/\r\n    ]\r\n};\r\n\r\nconst Context = createContext();\r\n\r\nexport default function AppContextProvider({children}) {\r\n    const [state, setState] = useState(() => {\r\n        if(localStorage.getItem('math-jedi')){\r\n            return JSON.parse(localStorage.getItem('math-jedi'));\r\n        }\r\n        return DEFAULT_STATE;\r\n    });\r\n    useEffect(() =>{\r\n        if(state){\r\n            localStorage.setItem('math-jedi',JSON.stringify(state));\r\n        }\r\n    },[state]);\r\n\r\n    return <Context.Provider value={{state, setState}}>\r\n        {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport function useStudentIsRegistered() {\r\n    const {state} = useContext(Context);\r\n    return state?.student?.name !== ''\r\n}\r\n\r\nexport function useStudent(){\r\n    const {state} = useContext(Context);\r\n    return state.student;\r\n}\r\n\r\nexport function useUpdateConfiguration(){\r\n    const {setState} = useContext(Context);\r\n    return (config) => setState((oldVal) => {\r\n        return {...oldVal,student: config}\r\n    });\r\n}\r\n\r\n\r\nfunction buildQuestions({questionsRange:{start,end},totalSums,totalQuestionsEachSum,percentageOfQuestionInNegative}){\r\n\r\n    const findNextNumber = ({start,end,percentageOfQuestionInNegative,total,prevNumber}) => {\r\n\r\n        const shouldBeNegative = (Math.random() <= (percentageOfQuestionInNegative/100));\r\n        const candidate = Math.round((Math.random() * (end - start)) + start);\r\n        const value = candidate * (shouldBeNegative ?  - 1 : 1);\r\n        if((value + total) < 0){\r\n            return findNextNumber({start,end,percentageOfQuestionInNegative,total,prevNumber});\r\n        }\r\n        if(Math.abs(prevNumber) === candidate ){\r\n            return findNextNumber({start,end,percentageOfQuestionInNegative,total,prevNumber});\r\n        }\r\n        return value;\r\n    };\r\n\r\n    const generateSet = ({start,end,percentageOfQuestionInNegative,totalQuestionsEachSum}) => {\r\n        const numbers = [];\r\n        let total = 0;\r\n        let prevNumber = 0;\r\n        for(let i = 0;i< totalQuestionsEachSum;i++){\r\n            const nextNumber = findNextNumber({start,end,percentageOfQuestionInNegative,total,prevNumber});\r\n            prevNumber = nextNumber;\r\n            total = total + nextNumber;\r\n            numbers.push(nextNumber);\r\n        }\r\n        return numbers;\r\n    };\r\n\r\n    return  [...Array(totalSums).keys()].map(() => generateSet({totalQuestionsEachSum,percentageOfQuestionInNegative,end,start}));\r\n}\r\n\r\nexport function useStartNewSession(){\r\n    const {setState} = useContext(Context);\r\n    const history = useHistory();\r\n\r\n    return () => {\r\n        const sessionId = uuidv4();\r\n        setState(state => {\r\n            const filteredSessions = state.sessions.filter(s => s.id !== state.student.currentSessionId);\r\n            const session = {\r\n                id: sessionId,\r\n                startAt : new Date().toISOString(),\r\n                endAt : null,\r\n                questions : buildQuestions(state.student.config),\r\n                answers : []\r\n            };\r\n            const newState = {student:{...state.student},sessions:[...filteredSessions,session]};\r\n            newState.student.currentSessionId = session.id;\r\n            return newState;\r\n        });\r\n        history.push(`/session/${sessionId}`);\r\n    }\r\n}\r\n\r\nexport function useCurrentActiveSession(){\r\n    const {state} = useContext(Context);\r\n    const sessions = state?.sessions?.filter(session => session.id === state.student.currentSessionId);\r\n    return sessions?.length > 0 ? sessions[0] : null;\r\n}\r\n\r\nexport function useLastSessionId(){\r\n    const {state} = useContext(Context);\r\n    return state.sessions && state.sessions.length > 0 ? state.sessions[state.sessions.length-1].id : null;\r\n}\r\n\r\nexport function useSession(sessionId){\r\n    const {state} = useContext(Context);\r\n    const sessions = state?.sessions?.filter(session => session.id === sessionId);\r\n    return sessions?.length > 0 ? sessions[0] : null;\r\n}\r\n\r\nexport function useAnswer(sessionId,questionIndex){\r\n    const {setState} = useContext(Context);\r\n    const startQuestion = new Date();\r\n    return useCallback((answer) => {\r\n        setState((oldState) => {\r\n            const session = oldState.sessions.filter(s => s.id === sessionId)[0];\r\n            if(session  && session.questions && session.questions.length > questionIndex) {\r\n                const question = session.questions[questionIndex];\r\n                answer = parseInt(answer);\r\n                const expectedAnswer = question.reduce((acc, next) => acc + next, 0);\r\n                const endQuestion = new Date();\r\n                const answerObject = {\r\n                    answer: answer,\r\n                    expected: expectedAnswer,\r\n                    isCorrect: answer === expectedAnswer,\r\n                    timeTakenInMs: endQuestion.getTime() - startQuestion.getTime(),\r\n                    takenAt: startQuestion.toISOString(),\r\n                    answerAt: endQuestion.toISOString()\r\n                };\r\n                const newSessions = {...session, answers: [...session.answers, answerObject]};\r\n                const isDone = newSessions.questions.length === newSessions.answers.length;\r\n                newSessions.endAt = isDone ? endQuestion.toISOString() : null;\r\n                const sessionIndex = oldState.sessions.indexOf(session);\r\n                return {\r\n                    student : {...oldState.student,currentSessionId : isDone ? null : oldState.student.currentSessionId},\r\n                    sessions: [...oldState.sessions.slice(0, sessionIndex), newSessions, ...oldState.sessions.slice(sessionIndex + 1, oldState.sessions.length)]\r\n                };\r\n            }\r\n            return oldState;\r\n        });\r\n    },[questionIndex, sessionId, setState, startQuestion]);\r\n}\r\n",
    "import React from \"react\";\r\n\r\nconst HORIZONTAL_ALIGN = {\r\n    left: 'flex-start',\r\n    center: 'center',\r\n    right: 'flex-end'\r\n};\r\nconst VERTICAL_ALIGN = {\r\n    top: 'flex-start',\r\n    center: 'center',\r\n    bottom: 'flex-end'\r\n};\r\nexport default function Vertical({children, heightFull, horizontalAlign, verticalAlign, gap,style, ...props}) {\r\n    const inlineStyle = {display: 'flex',flexDirection: 'column',height: heightFull ? '100%' : 'none'};\r\n    if (horizontalAlign in HORIZONTAL_ALIGN) {\r\n        inlineStyle.alignItems = HORIZONTAL_ALIGN[horizontalAlign];\r\n    }\r\n    if (verticalAlign in VERTICAL_ALIGN) {\r\n        inlineStyle.justifyContent = VERTICAL_ALIGN[verticalAlign];\r\n    }\r\n    if (gap > 0) {\r\n        children = children.map((child, index) => {\r\n            if (index > 0) {\r\n                const childStyle = child?.props?.style ?? {};\r\n                return React.cloneElement(child, {key: index, style: {marginTop: gap, ...childStyle}})\r\n            }\r\n            return child;\r\n        })\r\n    }\r\n    return <div style={{...inlineStyle,...style}} {...props}>{children}</div>\r\n}\r\n",
    "import React from \"react\";\r\n\r\nconst HORIZONTAL_ALIGN = {\r\n    left: 'flex-start',\r\n    center: 'center',\r\n    right: 'flex-end'\r\n};\r\nconst VERTICAL_ALIGN = {\r\n    top: 'flex-start',\r\n    center: 'center',\r\n    bottom: 'flex-end'\r\n};\r\nexport default function Horizontal({children, heightFull, horizontalAlign, verticalAlign, gap,style, ...props}) {\r\n    const inlineStyle = {display: 'flex',height: heightFull ? '100%' : 'none'};\r\n    if (horizontalAlign in HORIZONTAL_ALIGN) {\r\n        inlineStyle.justifyContent = HORIZONTAL_ALIGN[horizontalAlign];\r\n    }\r\n    if (verticalAlign in VERTICAL_ALIGN) {\r\n        inlineStyle.alignItems = VERTICAL_ALIGN[verticalAlign];\r\n    }\r\n    if (gap > 0) {\r\n        children = children.map((child, index) => {\r\n            if (index > 0) {\r\n                const childStyle = child?.props?.style ?? {};\r\n                return React.cloneElement(child, {key: index, style: {marginLeft: gap, ...childStyle}})\r\n            }\r\n            return React.cloneElement(child, {key: index});\r\n        })\r\n    }\r\n    return <div style={{...inlineStyle,...style}} {...props}>{children}</div>\r\n}\r\n",
    "import jediLogo from \"../jedi.svg\";\r\nimport MathJediLogo from \"../MathJediLogo\";\r\nimport React, {useCallback} from \"react\";\r\nimport Button, {ButtonLink} from \"../common/Button\";\r\nimport {useCurrentActiveSession, useLastSessionId, useStartNewSession, useStudentIsRegistered} from \"../App.actions\";\r\nimport Vertical from \"../common/Vertical\";\r\nimport {useHistory} from  \"react-router-dom\";\r\nimport Horizontal from \"../common/Horizontal\";\r\n\r\nexport default function OpeningScreen() {\r\n    const isRegistered = useStudentIsRegistered();\r\n    const startNewSession = useStartNewSession();\r\n    const currentActiveSession = useCurrentActiveSession();\r\n    const lastSessionId = useLastSessionId();\r\n    const history = useHistory();\r\n    const handleClick = useCallback(() => {\r\n        if(currentActiveSession !== null){\r\n            // eslint-disable-next-line no-restricted-globals\r\n            if(confirm('This will delete current active session and start a new one ')){\r\n                startNewSession();\r\n            }\r\n        }else{\r\n            startNewSession();\r\n        }\r\n    },[currentActiveSession, startNewSession]);\r\n    const activeSessionId = currentActiveSession?.id;\r\n    const handleContinue = useCallback(() => {\r\n        history.push(`/session/${activeSessionId}`);\r\n    },[activeSessionId, history]);\r\n\r\n    return <Vertical horizontalAlign={'center'} verticalAlign={'center'} heightFull>\r\n        <Vertical horizontalAlign={'center'} gap={10}>\r\n            <img src={jediLogo} alt=\"\" width={200} height={200}/>\r\n            <MathJediLogo/>\r\n            <div style={{fontSize: 25, marginTop: 0}}>May the force be with you</div>\r\n\r\n            <Vertical >\r\n                {!isRegistered &&\r\n                <ButtonLink to={`/register`}>Register</ButtonLink>\r\n                }\r\n                {isRegistered &&\r\n                <ButtonLink to={`/register`}>Settings</ButtonLink>\r\n                }\r\n                {currentActiveSession !== null &&\r\n                <Button onClick={handleContinue}>Continue</Button>\r\n                }\r\n                {lastSessionId !== null &&\r\n                <Button onClick={() => history.push(`/session/${lastSessionId}`)}>Last Score</Button>\r\n                }\r\n                {isRegistered &&\r\n                <Button onClick={handleClick}>New</Button>\r\n                }\r\n            </Vertical>\r\n        </Vertical>\r\n\r\n    </Vertical>\r\n}\r\n",
    "import React, {useCallback, useEffect, useState} from \"react\";\r\nimport classes from './Input.module.css';\r\n\r\nexport default function Input({style,label,value,onChange,autoCaps=false, ...props}) {\r\n    const [localValue,setLocalValue] = useState(value);\r\n    useEffect(()=> {\r\n        setLocalValue(value);\r\n    },[value]);\r\n\r\n    const handleChange = useCallback((event) => {\r\n        let value = event.target.value;\r\n        value = autoCaps ? value.toUpperCase() : value;\r\n        if(onChange){\r\n            onChange({value,oldVal:localValue});\r\n        }else{\r\n            setLocalValue(value);\r\n        }\r\n    },[autoCaps, localValue, onChange]);\r\n    return <label className={classes.root} style={style}>\r\n        <div className={classes.label}>{label}</div>\r\n        <input className={classes.input} {...props} value={localValue} onChange={handleChange}/>\r\n    </label>\r\n\r\n}\r\n\r\nexport function InputNumber({style,label,value,onChange, ...props}) {\r\n    const [localValue,setLocalValue] = useState(value);\r\n    useEffect(()=> {\r\n        setLocalValue(value);\r\n    },[value]);\r\n    const handleChange = useCallback((event) => {\r\n        let value = parseInt(event.target.value);\r\n        if(onChange){\r\n            onChange({value,oldVal:localValue});\r\n        }else{\r\n            setLocalValue(value);\r\n        }\r\n    },[localValue, onChange]);\r\n    return <label className={classes.root} style={style}>\r\n        <div className={classes.label}>{label}</div>\r\n        <input className={classes.input} type={'number'} style={{textAlign: 'right'}} {...props} value={localValue} onChange={handleChange}/>\r\n    </label>\r\n}\r\n",
    "import React from \"react\";\r\nimport classes from './Page.module.css';\r\n\r\nfunction Page({children,contentProps}) {\r\n    const content = children.filter(c => !(c.type === Actions));\r\n    const actions = children.filter(c => c.type === Actions);\r\n    const hasActions = actions.length > 0;\r\n    return <div className={classes.root}>\r\n            <div className={classes.content} {...contentProps}>{content}</div>\r\n            {hasActions && actions}\r\n        </div>\r\n}\r\n\r\nconst ACTIONS_ALIGN = {\r\n    left: 'flex-start',\r\n    right: 'flex-end',\r\n    center: 'center'\r\n};\r\n\r\nfunction Actions({children, align = 'left'}) {\r\n    return <div className={classes.actions} style={{justifyContent: ACTIONS_ALIGN[align]}}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nPage.Actions = Actions;\r\n\r\nexport default Page;\r\n",
    "import React from \"react\";\r\n\r\nexport default function Grow({grow = 1}) {\r\n    return <div style={{flexGrow: grow}}></div>\r\n}\r\n",
    "import React, {createContext, useCallback, useContext, useState} from \"react\";\r\nimport Horizontal from \"./Horizontal\";\r\nimport {uuidv4} from \"./utils\";\r\nimport Vertical from \"./Vertical\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NOTIFICATION_BACKGROUND_COLOR = {\r\n    info: 'green',\r\n    warning: 'yellow',\r\n    error: 'red'\r\n};\r\n\r\nfunction Notification({style, notification: {message, closeNotification, id, type}}) {\r\n    const inlineStyle = {\r\n        padding: '5px 10px 10px 10px',\r\n        color: 'white',\r\n        backgroundColor: NOTIFICATION_BACKGROUND_COLOR[type],\r\n        borderRadius: 5,\r\n        fontSize: '1.8rem',\r\n        boxShadow: '0px 5px 3px -3px rgba(0,0,0,0.3)'\r\n    };\r\n    return <Horizontal style={{...style, ...inlineStyle}} gap={10} verticalAlign={'center'}>\r\n        <div>\r\n            {message}\r\n        </div>\r\n        <FontAwesomeIcon icon={faTimesCircle} size=\"1x\" style={{cursor:'pointer'}} onClick={closeNotification}/>\r\n    </Horizontal>\r\n}\r\n\r\nconst DEFAULT_NOTIFICATIONS = [];\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport function NotificationContextProvider({children}) {\r\n    const [notifications, setNotifications] = useState(DEFAULT_NOTIFICATIONS);\r\n    return <NotificationContext.Provider value={{notifications, setNotifications}}>\r\n        {children}\r\n        <Vertical style={{position: 'fixed', top: 10, width: '100%'}} gap={5} horizontalAlign={'center'}>\r\n            {notifications.map(notification => <Notification key={notification.id} notification={notification}/>)}\r\n        </Vertical>\r\n    </NotificationContext.Provider>\r\n}\r\n\r\nexport function useNotification() {\r\n    const {setNotifications} = useContext(NotificationContext);\r\n    const showNotification = useCallback(({message, type}) => {\r\n        const id = uuidv4();\r\n        const closeNotification = () => {\r\n            setNotifications((notifications) => notifications.filter(notification => notification.id !== id));\r\n        };\r\n        setNotifications((oldNotifications) => [...oldNotifications, {id, message, type, closeNotification}]);\r\n        return closeNotification;\r\n    }, [setNotifications]);\r\n    return {\r\n        info: (message) => showNotification({message, type: 'info'}),\r\n        warning: (message) => showNotification({message, type: 'warning'}),\r\n        error: (message) => showNotification({message, type: 'error'})\r\n    };\r\n}\r\n",
    "import React, {useCallback, useState} from \"react\";\r\nimport Input, {InputNumber} from \"../common/Input\";\r\nimport Page from \"../common/Page\";\r\nimport Button from \"../common/Button\";\r\nimport Grow from \"../common/Grow\";\r\nimport Horizontal from \"../common/Horizontal\";\r\nimport {useNotification} from \"../common/Notification\";\r\nimport Vertical from \"../common/Vertical\";\r\nimport {useStudent, useUpdateConfiguration} from \"../App.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DEFAULT_STATE = {\r\n    name: '',\r\n    email: '',\r\n    config: {\r\n        questionsRange: {\r\n            start: 1,\r\n            end: 99\r\n        },\r\n        totalSums: 200,\r\n        totalQuestionsEachSum: 6,\r\n        percentageOfQuestionInNegative: 30,\r\n    }\r\n};\r\nexport default function RegistrationScreen() {\r\n    const [page, setPage] = useState(1);\r\n    const student = useStudent();\r\n    const [state, setState] = useState(student);\r\n    const notification = useNotification();\r\n    const updateConfiguration = useUpdateConfiguration();\r\n    const history = useHistory();\r\n    const handleChange = useCallback((props) => ({value}) => {\r\n        setState((oldSate) => {\r\n            const newState = {...oldSate};\r\n            const propsArray = props.split('.');\r\n            let propsLength = propsArray.length;\r\n            let pointer = newState;\r\n            propsArray.forEach((prop, index) => {\r\n                if (index < (propsLength - 1)) {\r\n                    pointer = pointer[prop];\r\n                }\r\n            });\r\n            pointer[propsArray[propsArray.length - 1]] = value;\r\n            return newState;\r\n        });\r\n    }, []);\r\n    const nameLength = state?.name?.length;\r\n    const emailLength = state?.email?.length;\r\n    const questionStart = state?.config?.questionsRange?.start;\r\n    const questionEnd = state?.config.questionsRange?.end;\r\n    const totalSums = state?.config?.totalSums;\r\n    const totalQuestionsEachSum = state?.config?.totalQuestionsEachSum;\r\n    const percentageOfQuestionInNegative = state?.config?.percentageOfQuestionInNegative;\r\n    const validatePage = useCallback(() => {\r\n        switch (page) {\r\n            case 1 : {\r\n                if (nameLength > 0) {\r\n                    return true;\r\n                }\r\n                notification.error('Name should not be empty');\r\n                return false;\r\n            }\r\n            case 2 : {\r\n                if (emailLength > 0) {\r\n                    return true;\r\n                }\r\n                notification.error('Email should not be empty');\r\n                return false;\r\n            }\r\n            case 3 : {\r\n                if (!(questionStart > 0)) {\r\n                    notification.error('Range `Start value` should be greater than 0');\r\n                    return false;\r\n                }\r\n                if (!(questionEnd > 0)) {\r\n                    notification.error('Range `End value` should be greater than 0');\r\n                    return false;\r\n                }\r\n                if (questionEnd < questionStart) {\r\n                    notification.error('Range `End value` should be greater than `Start value`');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            case 4 : {\r\n                if (!(totalSums > 0)) {\r\n                    notification.error('`Total Sums` should be greater than 0');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            case 5 : {\r\n                if (!(totalQuestionsEachSum > 0)) {\r\n                    notification.error('`Total Questions each Sums` should be greater than 0');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            case 6 : {\r\n                if (!(percentageOfQuestionInNegative >= 0 && percentageOfQuestionInNegative <= 100)) {\r\n                    notification.error('`Percentae of Negative Questions` should be between than 0 to 100');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            default : {\r\n                return true;\r\n            }\r\n        }\r\n\r\n    }, [emailLength, nameLength, notification, page, percentageOfQuestionInNegative, questionEnd, questionStart, totalQuestionsEachSum, totalSums]);\r\n\r\n    const nextPage = useCallback((next) => {\r\n        if (validatePage()) {\r\n            setPage(page + (next ? 1 : -1));\r\n        }\r\n    }, [page, validatePage]);\r\n\r\n    const saveChanges = useCallback(() => {\r\n        updateConfiguration(state);\r\n        history.push(\"/\");\r\n    },[history, state, updateConfiguration]);\r\n    return <Page>\r\n        <Vertical heightFull={true} verticalAlign={'center'} style={{padding:'1rem'}}>\r\n            {page === 1 &&\r\n            <Input placeholder={'Name'} autoCaps={false} label={'Enter your Name'} value={state.name}\r\n                   onChange={handleChange('name')}/>\r\n            }\r\n            {page === 2 &&\r\n            <Input type={\"email\"} autoCaps={false} placeholder={'Email'} label={'Enter your E-Mail'} value={state.email}\r\n                   onChange={handleChange('email')}/>\r\n            }\r\n            {page === 3 &&\r\n            <Horizontal gap={10} horizontalAlign={'center'}>\r\n                <InputNumber label={'Start Range'} value={state?.config?.questionsRange?.start}\r\n                             onChange={handleChange('config.questionsRange.start')}/>\r\n                <InputNumber label={'End Range'} value={state?.config?.questionsRange?.end}\r\n                             onChange={handleChange('config.questionsRange.end')}/>\r\n            </Horizontal>\r\n            }\r\n            {page === 4 &&\r\n            <InputNumber label={'Total Sums'} value={state?.config?.totalSums}\r\n                         onChange={handleChange('config.totalSums')}/>\r\n            }\r\n            {page === 5 &&\r\n            <InputNumber label={'Total Questions Each Sum'} value={state?.config?.totalQuestionsEachSum}\r\n                         onChange={handleChange('config.totalQuestionsEachSum')}/>\r\n            }\r\n\r\n            {page === 6 &&\r\n            <InputNumber label={'Percentage of Negative Questions'}\r\n                         value={state?.config?.percentageOfQuestionInNegative}\r\n                         onChange={handleChange('config.percentageOfQuestionInNegative')}/>\r\n            }\r\n        </Vertical>\r\n        <Page.Actions align={'center'}>\r\n            {page !== 1 &&\r\n            <Button onClick={() => nextPage(false)}>Back</Button>\r\n            }\r\n            <Grow/>\r\n            {page < 6 &&\r\n                <Button onClick={() => nextPage(true)}>Next</Button>\r\n            }\r\n            {page === 6 &&\r\n            <Button onClick={() => saveChanges()}>Save</Button>\r\n            }\r\n        </Page.Actions>\r\n    </Page>\r\n\r\n}\r\n",
    "import React from \"react\";\r\nimport Page from \"../common/Page\";\r\nimport Button from \"../common/Button\";\r\nimport Grow from \"../common/Grow\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport classes from './ReportScreen.module.css';\r\nimport Horizontal from \"../common/Horizontal\";\r\n\r\nconst ONE_MINUTE = 1000 * 60;\r\n\r\nconst months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\nconst COMMENTS = {\r\n    60: 'Nice Try',\r\n    70: 'Terrific',\r\n    80: 'Fantastic',\r\n    90: 'Fabulous',\r\n    100: 'Spectacular'\r\n};\r\n\r\nfunction formatDdMmmYyyyHhMmSs(date) {\r\n    const append = (n) => n <= 9 ? `0${n}` : n.toString();\r\n    return `${append(date.getDate())}-${months[date.getMonth() + 1]}-${date.getFullYear()} ${append(date.getHours())}:${append(date.getMinutes())}`\r\n}\r\n\r\nfunction getComments(score) {\r\n    if (score < 70) {\r\n        return 'Nice Try'\r\n    }\r\n    if (score < 80) {\r\n        return 'Terrific'\r\n    }\r\n    if (score < 90) {\r\n        return 'Fantastic'\r\n    }\r\n    if (score < 100) {\r\n        return 'Fabulous'\r\n    }\r\n    if (score === 100) {\r\n        return 'Spectacular'\r\n    }\r\n}\r\n\r\n\r\nfunction getBadgeColor(score) {\r\n    if (score < 70) {\r\n        return 'rgba(122,41,123,0.8)';\r\n    }\r\n    if (score < 80) {\r\n        return 'rgba(41,100,123,0.8)';\r\n    }\r\n    if (score < 90) {\r\n        return 'rgba(122,123,41,0.8)';\r\n    }\r\n    if (score < 100) {\r\n        return 'rgba(181,182,47,0.8)';\r\n    }\r\n    if (score === 100) {\r\n        return 'rgba(208,162,30,0.8)';\r\n    }\r\n}\r\n\r\nexport default function ReportScreen({session}) {\r\n    const history = useHistory();\r\n    const score = (session.answers.filter(s => s.isCorrect).length / session.answers.length) * 100;\r\n\r\n    return <Page>\r\n        <Horizontal verticalAlign={'bottom'}>\r\n            <div style={{fontSize: '3rem', marginBottom: '1rem'}}>Report</div>\r\n            <Grow/>\r\n            <span>\r\n            <div style={{\r\n                fontSize: '5rem',\r\n                border: `3px dashed ${getBadgeColor(score)}`,\r\n                borderRadius: 150,\r\n                width: 150,\r\n                height: 150,\r\n                textAlign: 'center',\r\n                paddingTop: 13,\r\n                color : getBadgeColor(score),\r\n                boxShadow: `inset 0px 0px 80px 10px ${getBadgeColor(score)}`,\r\n                margin: 10\r\n            }}>\r\n                {score.toFixed(0)}\r\n            </div>\r\n                <div style={{textAlign: 'center', fontSize: '1.5rem',marginBottom:'1rem'}}>\r\n                {getComments(score)} !!\r\n                </div>\r\n                </span>\r\n            <Grow/>\r\n            <div style={{\r\n                fontSize: '1.5rem',\r\n                marginBottom: '1rem'\r\n            }}>{formatDdMmmYyyyHhMmSs(new Date(session.startAt))}</div>\r\n        </Horizontal>\r\n        <div>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                <tr>\r\n                    <td style={{textAlign: 'center'}}>No</td>\r\n                    <td style={{width: '100%', textAlign: 'right', padding: 5}}>Question</td>\r\n                    <td>Total</td>\r\n                    <td>Answer</td>\r\n                    <td style={{whiteSpace: 'nowrap'}}>Time (Seconds)</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {session.questions.map((question, index) => {\r\n                    const {timeTakenInMs, answer, expected, isCorrect} = session.answers[index];\r\n                    return <tr data-isCorrect={isCorrect}>\r\n                        <td style={{textAlign: 'center'}}>{index + 1}</td>\r\n                        <td style={{textAlign: 'right'}}>{question.join(', ')}</td>\r\n                        <td style={{textAlign: 'center'}}>{expected}</td>\r\n                        <td style={{textAlign: 'center'}}>{answer}</td>\r\n                        <td style={{\r\n                            textAlign: 'center',\r\n                            whiteSpace: 'nowrap'\r\n                        }}>{`${((timeTakenInMs) / 1000).toFixed(2)}`}</td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <Page.Actions>\r\n            <Grow/>\r\n            <Button onClick={() => history.push('/')}>Home</Button>\r\n        </Page.Actions>\r\n    </Page>\r\n}\r\n",
    "import {useAnswer} from \"../App.actions\";\r\nimport React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport Horizontal from \"../common/Horizontal\";\r\nimport classes from \"./SessionScreen.module.css\";\r\nimport Page from \"../common/Page\";\r\nimport Grow from \"../common/Grow\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst ENTER_KEY = 13;\r\nexport default function ExerciseScreen({currentActiveSession}) {\r\n\r\n    const questionIndex = currentActiveSession.answers.length;\r\n    const nextQuestionsToBeAnswered = currentActiveSession.questions[questionIndex] || [];\r\n    const setAnswer = useAnswer(currentActiveSession.id, questionIndex);\r\n    const contentRef = useRef();\r\n    const [fontSize, setFontSize] = useState(24);\r\n    const questionStyle = {fontSize};\r\n    const answerRef = useRef();\r\n    useEffect(() => {\r\n        const height = contentRef.current.offsetHeight;\r\n        setFontSize((height - 50) / (nextQuestionsToBeAnswered.length + 1));\r\n    }, [nextQuestionsToBeAnswered.length]);\r\n\r\n    const onEnterPressed = useCallback((e) => {\r\n        if (e.keyCode === ENTER_KEY) {\r\n            setAnswer(answerRef.current.value);\r\n        }\r\n    }, [answerRef, setAnswer]);\r\n    useEffect(() => {\r\n        answerRef.current.value = '';\r\n    }, [answerRef, questionIndex]);\r\n    return <Page><label style={{width: '100%', height: '100%'}}>\r\n        <Horizontal style={{height: '100%'}}>\r\n            <div className={classes.content}>\r\n                <div ref={contentRef} className={classes.question} style={questionStyle}>\r\n                    {nextQuestionsToBeAnswered.map(((question, index) => <div key={index}>{question}</div>))}\r\n                </div>\r\n                <input ref={answerRef} type=\"number\" className={classes.number} style={{fontSize: fontSize}}\r\n                       autoFocus={true} min={0} placeholder={'0'} onKeyDown={onEnterPressed}/>\r\n            </div>\r\n            <div style={{width: '30vw', borderLeft: '1px dashed rgba(0,0,0,0.5)'}}></div>\r\n        </Horizontal>\r\n    </label>\r\n        <Page.Actions>\r\n            <Grow/>\r\n            <Button onClick={() => setAnswer(answerRef.current.value)}>Next</Button>\r\n        </Page.Actions>\r\n    </Page>;\r\n}\r\n",
    "import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAnswer, useSession} from \"../App.actions\";\r\nimport classes from \"./SessionScreen.module.css\";\r\nimport Page from \"../common/Page\";\r\nimport Button from \"../common/Button\";\r\nimport Grow from \"../common/Grow\";\r\nimport ReportScreen from \"./ReportScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\n\r\n\r\nexport default function SessionScreen() {\r\n    const {sessionId} = useParams();\r\n    const currentActiveSession = useSession(sessionId);\r\n    const isDone = currentActiveSession.answers.length === currentActiveSession.questions.length;\r\n    return <>\r\n        {!isDone && <ExerciseScreen currentActiveSession={currentActiveSession}/>}\r\n        {isDone && <ReportScreen session={currentActiveSession}/>}\r\n        </>\r\n}\r\n",
    "import React from \"react\";\r\nimport OpeningScreen from \"./opening-screen/OpeningScreen\";\r\nimport AppContextProvider from \"./App.actions\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport RegistrationScreen from \"./registration-screen/RegistrationScreen\";\r\nimport {NotificationContextProvider} from \"./common/Notification\";\r\nimport SessionScreen from \"./session-screen/SessionScreen\";\r\n\r\nexport default function App() {\r\n    return <Router>\r\n        <AppContextProvider>\r\n            <NotificationContextProvider>\r\n                <Switch>\r\n                    <Route path={\"/register\"}>\r\n                        <RegistrationScreen/>\r\n                    </Route>\r\n                    <Route path={\"/session/:sessionId\"}>\r\n                        <SessionScreen/>\r\n                    </Route>\r\n                    <Route path={\"/\"}>\r\n                        <OpeningScreen/>\r\n                    </Route>\r\n                </Switch>\r\n            </NotificationContextProvider>\r\n        </AppContextProvider>\r\n    </Router>\r\n}\r\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./app/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}
